restore_registry: &RESTORE_REGISTRY
  restore_cache:
    key: registry
save_registry: &SAVE_REGISTRY
  save_cache:
    key: registry-{{ .BuildNum }}
    paths:
      - /usr/local/cargo/registry/index
deps_key: &DEPS_KEY
  key: deps-{{ checksum "~/rust-version" }}-{{ checksum "Cargo.lock" }}
restore_deps: &RESTORE_DEPS
  restore_cache:
    <<: *DEPS_KEY
save_deps: &SAVE_DEPS
  save_cache:
    <<: *DEPS_KEY
    paths:
      - target
      - /usr/local/cargo/registry/cache

version: 2
jobs:
  circle-all:
    docker:
      - image: rust:1.80.1
    environment:
      RUSTFLAGS: -D warnings
    steps:
      - checkout
      - run: rustup component add rustfmt clippy
      - *RESTORE_REGISTRY
      - run: cargo generate-lockfile
      - *SAVE_REGISTRY
      - run: rustc --version > ~/rust-version
      - *RESTORE_DEPS
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all --all-targets
      - run: cargo test --all
      - run: cargo run -p render-conjure
      - run: |
          FILES_MODIFIED="$(git status --porcelain)"
          if [[ -n "$FILES_MODIFIED" ]]; then
            echo "$FILES_MODIFIED"
            exit 1
          fi
      - *SAVE_DEPS

workflows:
  version: 2
  main:
    jobs:
      - circle-all:
          filters: { tags: { only: /.*/ } }
